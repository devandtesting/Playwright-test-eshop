using System;
using System.Threading.Tasks;
using Microsoft.Playwright;

class Program
{
    static async Task Main(string[] args)
    {
        try
        {
            using var playwright = await Playwright.CreateAsync();
            var browser = await playwright.Chromium.LaunchAsync(new BrowserTypeLaunchOptions { Headless = false });
            var page = await browser.NewPageAsync();
            await page.GotoAsync("https://www.o2.sk/");
            Console.WriteLine("Navigated to https://www.o2.sk/");

            // Click on the link with href="/ponuka/telefony-a-zariadenia"
            await page.ClickAsync("a[href='/ponuka/telefony-a-zariadenia']");
            Console.WriteLine("Clicked on '/ponuka/telefony-a-zariadenia'");

            // Wait for the page to load or for the URL to change
            await page.WaitForURLAsync("**/ponuka/telefony-a-zariadenia");
            Console.WriteLine("Navigated to '**/ponuka/telefony-a-zariadenia'");

            // Click on the <a> element with data-gtmname="Mobilne telefony"
            await page.ClickAsync("a[data-gtmname='Mobilne telefony']");
            Console.WriteLine("Clicked on 'Mobilne telefony'");

            // Wait for the page to load or for the URL to change
            await page.WaitForURLAsync("**/telefony");
            Console.WriteLine("Navigated to '**/telefony'");

            // Ensure the element with data-testid is in view and visible
            var skuCardBox = page.Locator("[data-testid='sku-card-box-9f4fe78f-18bc-4f7b-9bbe-3e8329294413']");
            await skuCardBox.ScrollIntoViewIfNeededAsync();
            await skuCardBox.WaitForAsync(new LocatorWaitForOptions { State = WaitForSelectorState.Visible });
            Console.WriteLine("Element with data-testid is visible");

            // Click on the element with the specified data-testid
            await skuCardBox.ClickAsync();
            Console.WriteLine("Clicked on element with data-testid 'sku-card-box-9f4fe78f-18bc-4f7b-9bbe-3e8329294413'");

            // Wait for the page to load or for the URL to change
            // await page.WaitForURLAsync("**/honor-200-lite-modry");
            // Console.WriteLine("Navigated to '**/honor-200-lite-modry'");

            // Ensure that the page has loaded by waiting for the H1 element that contains "HONOR"
            await page.WaitForSelectorAsync("h1:has-text('HONOR')");
            Console.WriteLine("Final page is fully loaded");



            // Kupit na splatky
            await page.ClickAsync("[data-testid='hw-detail-pricing-buy-with-tariff']");
            Console.WriteLine("Clicked on 'Kupit na splatky'");

            // New customer
            await page.ClickAsync("[data-testid='login.cancel']");
            Console.WriteLine("Clicked on 'New customer'");

            // Wait for the page to load or for the URL to change
            await page.WaitForURLAsync("**/na-splatky");
            Console.WriteLine("Navigated to '**/na-splatky'");

            //h1 na splatky visible
            await page.WaitForSelectorAsync("h1:has-text('splátky')");
            Console.WriteLine("Final page is fully loaded");

            // Print the page title after clicking the link
            var title = await page.TitleAsync();
            Console.WriteLine($"Page title after clicking: {title}");

            // Drop-down
            await page.ClickAsync("[class*='ss-main']");
            Console.WriteLine("Clicked on 'Drop-down'");

            // Choose plan 29
            await page.ClickAsync("div.ss-option:has-text('29')");
            Console.WriteLine("Clicked on 'Choose plan'");

            // Submit
            await page.ClickAsync("[data-testid='chooseTariff.submit']");
            Console.WriteLine("Clicked on 'Submit'");

            // Wait for the page to load or for the URL to change
            await page.WaitForURLAsync("**/typ-aktivacie");
            Console.WriteLine("Navigated to '**/typ-aktivacie'");


            await page.ClickAsync("o2-button[data-testid='submit-choose-transaction']");  

            // Wait for the page to load or for the URL to change
            await page.WaitForURLAsync("**/balicky-a-sluzby");
            Console.WriteLine("Navigated to '**/balicky-a-sluzby'"); 

            await Task.Delay(1000);

            await page.ClickAsync("[data-testid='crossSell.submit']");     

            // Wait for the page to load or for the URL to change
            await page.WaitForURLAsync("**/akontacia");
            Console.WriteLine("Navigated to '**/akontacia'");      

            await page.ClickAsync("[data-testid='hwSliderPage.submit']");  

            // Wait for the page to load or for the URL to change
            await page.WaitForURLAsync("**/kosik");
            Console.WriteLine("Navigated to '**/kosik'"); 

            await page.ClickAsync("[data-testid='cart-summary__proceed-to-checkout']");  

            // Wait for the page to load or for the URL to change
            await page.WaitForURLAsync("**/udaje");
            Console.WriteLine("Navigated to '**/udaje'"); 

            await page.ClickAsync("[data-testid='checkout-submit']"); 


            // await Task.Delay(2000);
            // Console.WriteLine("waiting for John"); 

            // FORMULAR
            await page.FillAsync("input[name='firstName']", "John");            
            Console.WriteLine("JOhn inserted"); 

            await page.FillAsync("input[name='lastName']", "Smith"); 
            await page.FillAsync("input[name='contactPhone']", "0904123123");
            await page.FillAsync("input[name='email']", "john@smith.com");
            await page.FillAsync("input[name='street']", "Dunajská");
            await page.FillAsync("input[name='streetNumber']", "5");    
            await page.FillAsync("input[name='city']", "Bratislava");
            await page.FillAsync("input[name='zip']", "81106");

            // Rodne cislo generator
            Random randCislo = new Random();
            long rodneCisloTest = 0;
            long rodneCislo = 0;
            while (true)
            {
                int rok = randCislo.Next(50,100);
                int mesiac = randCislo.Next(10,13);
                int den = randCislo.Next(10,29);
                int koniec = randCislo.Next(1000,10000);
                string rodneCisloStr = rok.ToString() + mesiac.ToString() + den.ToString() + koniec.ToString();
                rodneCisloTest = long.Parse(rodneCisloStr);

                if (rodneCisloTest % 11 == 0)
                {
                    rodneCislo = rodneCisloTest;
                    break;
                }
            }
            Console.WriteLine($"Valid birth number (divisible by 11): {rodneCislo}"); 
            //

            await page.FillAsync("input[name='birthNumber']", rodneCislo.ToString());
            await page.FillAsync("input[name='idCardNumber']", "SP123123");
            Console.WriteLine("ID CARD inserted"); 
            await page.Keyboard.PressAsync("Tab");
            await page.Keyboard.TypeAsync("01.04.2026");
            await page.ClickAsync("input[name='idCardNumber']"); 



            // await page.Keyboard.PressAsync("Enter");


            // await page.FillAsync("input[class*='o2-input--has--suffix']", "01.04.2026");   
            // Console.WriteLine("DATE inserted"); 

            await page.ClickAsync("[data-testid='checkout-submit']"); 

            // Dorucenie a platba
            await page.ClickAsync("[id='o2-radio-7']");              


            await page.ClickAsync("[data-testid='checkout-submit']"); 


            // Random randCislo = new Random();
            // int rok = randCislo.Next(30,100);
            // int mesiac = randCislo.Next(10,13);
            // int den = randCislo.Next(20,29);
            // int koniec = randCislo.Next(1000,10000);
            // string rodneCislo = rok.ToString() + mesiac.ToString() + den.ToString() + koniec.ToString();
            // long rodneCisloInt = long.Parse(rodneCislo);



            // Random randCislo = new Random();
            // int rok = randCislo.Next(30,100);
            // int mesiac = randCislo.Next(9,13);
            // int den = randCislo.Next(9,29);
            // int koniec = randCislo.Next(1000,10000);
            // string rodneCislo = nahodneCislo + "/" + nahodneCislo2;
            // Console.WriteLine(rodneCislo);   




            // Pause for 5 seconds before closing the browser
            Console.WriteLine("Pausing for 5 seconds...");
            await Task.Delay(10000);

            // Close the browser after the task is complete
            await browser.CloseAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }
}
